# Makefile.in generated by automake 1.11.1 from Makefile.am.
# src/madness/world/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008, 2009  Free Software Foundation,
# Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.





VPATH = ../../../../src/madness/world
pkgdatadir = $(datadir)/madness
pkgincludedir = $(includedir)/madness
pkglibdir = $(libdir)/madness
pkglibexecdir = $(libexecdir)/madness
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-unknown-linux-gnu
host_triplet = x86_64-unknown-linux-gnu
DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in \
	$(thisinclude_HEADERS) $(top_srcdir)/config/MakeGlobal.am
TESTS = test_prof.mpi$(EXEEXT) test_ar.mpi$(EXEEXT) \
	test_hashdc.mpi$(EXEEXT) test_hello.mpi$(EXEEXT) \
	test_atomicint.mpi$(EXEEXT) test_future.mpi$(EXEEXT) \
	test_future2.mpi$(EXEEXT) test_future3.mpi$(EXEEXT) \
	test_dc.mpi$(EXEEXT) test_hashthreaded.mpi$(EXEEXT) \
	test_queue.mpi$(EXEEXT) test_world.mpi$(EXEEXT) \
	test_worldprofile.mpi$(EXEEXT) test_binsorter.mpi$(EXEEXT) \
	$(am__EXEEXT_1)
#am__append_1 = test_vector.mpi test_worldptr.mpi test_worldref.mpi test_stack.seq
noinst_PROGRAMS = $(am__EXEEXT_2)
subdir = src/madness/world
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps =  \
	$(top_srcdir)/config/acx_check_compiler_flags.m4 \
	$(top_srcdir)/config/acx_check_tls.m4 \
	$(top_srcdir)/config/acx_crayxe.m4 \
	$(top_srcdir)/config/acx_crayxt.m4 \
	$(top_srcdir)/config/acx_detect_cxx.m4 \
	$(top_srcdir)/config/acx_enable_debugging.m4 \
	$(top_srcdir)/config/acx_enable_gentensor.m4 \
	$(top_srcdir)/config/acx_enable_optimal.m4 \
	$(top_srcdir)/config/acx_enable_optimization.m4 \
	$(top_srcdir)/config/acx_enable_task_profiler.m4 \
	$(top_srcdir)/config/acx_enable_warn.m4 \
	$(top_srcdir)/config/acx_fortran_symbols.m4 \
	$(top_srcdir)/config/acx_ibmbgp.m4 \
	$(top_srcdir)/config/acx_ibmbgq.m4 \
	$(top_srcdir)/config/acx_mac.m4 \
	$(top_srcdir)/config/acx_mpi.m4 \
	$(top_srcdir)/config/acx_posix_memalign.m4 \
	$(top_srcdir)/config/acx_std_abs.m4 \
	$(top_srcdir)/config/acx_unqal_stat_decl.m4 \
	$(top_srcdir)/config/acx_with_elemental.m4 \
	$(top_srcdir)/config/acx_with_google_perf.m4 \
	$(top_srcdir)/config/acx_with_google_test.m4 \
	$(top_srcdir)/config/acx_with_libxc.m4 \
	$(top_srcdir)/config/acx_with_mkl.m4 \
	$(top_srcdir)/config/acx_with_stubmpi.m4 \
	$(top_srcdir)/config/acx_with_tbb.m4 \
	$(top_srcdir)/config/am_prog_ar.m4 \
	$(top_srcdir)/config/ax_cxx_compile_stdcxx_11.m4 \
	$(top_srcdir)/config/libtool.m4 \
	$(top_srcdir)/config/ltoptions.m4 \
	$(top_srcdir)/config/ltsugar.m4 \
	$(top_srcdir)/config/ltversion.m4 \
	$(top_srcdir)/config/lt~obsolete.m4 $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/src/madness/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__installdirs = "$(DESTDIR)$(libdir)" "$(DESTDIR)$(thisincludedir)"
LTLIBRARIES = $(lib_LTLIBRARIES)
libMADworld_la_LIBADD =
am__objects_1 =
am_libMADworld_la_OBJECTS = libMADworld_la-madness_exception.lo \
	libMADworld_la-world.lo libMADworld_la-timers.lo \
	libMADworld_la-future.lo libMADworld_la-redirectio.lo \
	libMADworld_la-archive_type_names.lo libMADworld_la-info.lo \
	libMADworld_la-debug.lo libMADworld_la-print.lo \
	libMADworld_la-worldmem.lo libMADworld_la-worldrmi.lo \
	libMADworld_la-safempi.lo libMADworld_la-worldpapi.lo \
	libMADworld_la-worldref.lo libMADworld_la-worldam.lo \
	libMADworld_la-worldprofile.lo libMADworld_la-thread.lo \
	libMADworld_la-world_task_queue.lo libMADworld_la-worldgop.lo \
	libMADworld_la-deferred_cleanup.lo \
	libMADworld_la-worldmutex.lo \
	libMADworld_la-binary_fstream_archive.lo \
	libMADworld_la-text_fstream_archive.lo \
	libMADworld_la-lookup3.lo libMADworld_la-worldmpi.lo \
	libMADworld_la-group.lo $(am__objects_1)
libMADworld_la_OBJECTS = $(am_libMADworld_la_OBJECTS)
libMADworld_la_LINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(libMADworld_la_LDFLAGS) $(LDFLAGS) -o $@
#am__EXEEXT_1 = test_vector.mpi$(EXEEXT) \
#	test_worldptr.mpi$(EXEEXT) \
#	test_worldref.mpi$(EXEEXT) \
#	test_stack.seq$(EXEEXT)
am__EXEEXT_2 = test_prof.mpi$(EXEEXT) test_ar.mpi$(EXEEXT) \
	test_hashdc.mpi$(EXEEXT) test_hello.mpi$(EXEEXT) \
	test_atomicint.mpi$(EXEEXT) test_future.mpi$(EXEEXT) \
	test_future2.mpi$(EXEEXT) test_future3.mpi$(EXEEXT) \
	test_dc.mpi$(EXEEXT) test_hashthreaded.mpi$(EXEEXT) \
	test_queue.mpi$(EXEEXT) test_world.mpi$(EXEEXT) \
	test_worldprofile.mpi$(EXEEXT) test_binsorter.mpi$(EXEEXT) \
	$(am__EXEEXT_1)
PROGRAMS = $(noinst_PROGRAMS)
am_test_ar_mpi_OBJECTS = test_ar.$(OBJEXT)
test_ar_mpi_OBJECTS = $(am_test_ar_mpi_OBJECTS)
test_ar_mpi_DEPENDENCIES = libMADworld.la
am_test_atomicint_mpi_OBJECTS = test_atomicint.$(OBJEXT)
test_atomicint_mpi_OBJECTS = $(am_test_atomicint_mpi_OBJECTS)
test_atomicint_mpi_DEPENDENCIES = libMADworld.la
am_test_binsorter_mpi_OBJECTS = test_binsorter.$(OBJEXT)
test_binsorter_mpi_OBJECTS = $(am_test_binsorter_mpi_OBJECTS)
test_binsorter_mpi_DEPENDENCIES = libMADworld.la
am_test_dc_mpi_OBJECTS = test_dc.$(OBJEXT)
test_dc_mpi_OBJECTS = $(am_test_dc_mpi_OBJECTS)
test_dc_mpi_DEPENDENCIES = libMADworld.la
am_test_future_mpi_OBJECTS = test_future.$(OBJEXT)
test_future_mpi_OBJECTS = $(am_test_future_mpi_OBJECTS)
test_future_mpi_DEPENDENCIES = libMADworld.la
am_test_future2_mpi_OBJECTS = test_future2.$(OBJEXT)
test_future2_mpi_OBJECTS = $(am_test_future2_mpi_OBJECTS)
test_future2_mpi_DEPENDENCIES = libMADworld.la
am_test_future3_mpi_OBJECTS = test_future3.$(OBJEXT)
test_future3_mpi_OBJECTS = $(am_test_future3_mpi_OBJECTS)
test_future3_mpi_DEPENDENCIES = libMADworld.la
am_test_hashdc_mpi_OBJECTS = test_hashdc.$(OBJEXT)
test_hashdc_mpi_OBJECTS = $(am_test_hashdc_mpi_OBJECTS)
test_hashdc_mpi_DEPENDENCIES = libMADworld.la
am_test_hashthreaded_mpi_OBJECTS = test_hashthreaded.$(OBJEXT)
test_hashthreaded_mpi_OBJECTS = $(am_test_hashthreaded_mpi_OBJECTS)
test_hashthreaded_mpi_DEPENDENCIES = libMADworld.la
am_test_hello_mpi_OBJECTS = test_hello.$(OBJEXT)
test_hello_mpi_OBJECTS = $(am_test_hello_mpi_OBJECTS)
test_hello_mpi_DEPENDENCIES = libMADworld.la
am_test_prof_mpi_OBJECTS = test_prof.$(OBJEXT)
test_prof_mpi_OBJECTS = $(am_test_prof_mpi_OBJECTS)
test_prof_mpi_DEPENDENCIES = libMADworld.la
am_test_queue_mpi_OBJECTS = test_queue.$(OBJEXT)
test_queue_mpi_OBJECTS = $(am_test_queue_mpi_OBJECTS)
test_queue_mpi_DEPENDENCIES = libMADworld.la
am__test_stack_seq_SOURCES_DIST = test_stack.cc
#am_test_stack_seq_OBJECTS = test_stack_seq-test_stack.$(OBJEXT)
test_stack_seq_OBJECTS = $(am_test_stack_seq_OBJECTS)
am__DEPENDENCIES_1 =
am__DEPENDENCIES_2 = $(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
#test_stack_seq_DEPENDENCIES =  \
#	$(am__DEPENDENCIES_2) \
#	$(LIBGTEST) libMADworld.la
test_stack_seq_LINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(test_stack_seq_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
am__test_vector_mpi_SOURCES_DIST = test_vector.cc
#am_test_vector_mpi_OBJECTS = test_vector_mpi-test_vector.$(OBJEXT)
test_vector_mpi_OBJECTS = $(am_test_vector_mpi_OBJECTS)
#test_vector_mpi_DEPENDENCIES =  \
#	$(am__DEPENDENCIES_2) \
#	$(LIBGTEST) libMADworld.la
test_vector_mpi_LINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(test_vector_mpi_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
am_test_world_mpi_OBJECTS = test_world.$(OBJEXT)
test_world_mpi_OBJECTS = $(am_test_world_mpi_OBJECTS)
test_world_mpi_DEPENDENCIES = libMADworld.la
am_test_worldprofile_mpi_OBJECTS = test_worldprofile.$(OBJEXT)
test_worldprofile_mpi_OBJECTS = $(am_test_worldprofile_mpi_OBJECTS)
test_worldprofile_mpi_DEPENDENCIES = libMADworld.la
am__test_worldptr_mpi_SOURCES_DIST = test_worldptr.cc
#am_test_worldptr_mpi_OBJECTS = test_worldptr_mpi-test_worldptr.$(OBJEXT)
test_worldptr_mpi_OBJECTS = $(am_test_worldptr_mpi_OBJECTS)
#test_worldptr_mpi_DEPENDENCIES =  \
#	$(am__DEPENDENCIES_2) \
#	$(LIBGTEST) libMADworld.la
test_worldptr_mpi_LINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(test_worldptr_mpi_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
am__test_worldref_mpi_SOURCES_DIST = test_worldref.cc
#am_test_worldref_mpi_OBJECTS = test_worldref_mpi-test_worldref.$(OBJEXT)
test_worldref_mpi_OBJECTS = $(am_test_worldref_mpi_OBJECTS)
#test_worldref_mpi_DEPENDENCIES =  \
#	$(am__DEPENDENCIES_2) \
#	$(LIBGTEST) libMADworld.la
test_worldref_mpi_LINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(test_worldref_mpi_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
DEFAULT_INCLUDES = 
depcomp = $(SHELL) $(top_srcdir)/config/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
SOURCES = $(libMADworld_la_SOURCES) $(test_ar_mpi_SOURCES) \
	$(test_atomicint_mpi_SOURCES) $(test_binsorter_mpi_SOURCES) \
	$(test_dc_mpi_SOURCES) $(test_future_mpi_SOURCES) \
	$(test_future2_mpi_SOURCES) $(test_future3_mpi_SOURCES) \
	$(test_hashdc_mpi_SOURCES) $(test_hashthreaded_mpi_SOURCES) \
	$(test_hello_mpi_SOURCES) $(test_prof_mpi_SOURCES) \
	$(test_queue_mpi_SOURCES) $(test_stack_seq_SOURCES) \
	$(test_vector_mpi_SOURCES) $(test_world_mpi_SOURCES) \
	$(test_worldprofile_mpi_SOURCES) $(test_worldptr_mpi_SOURCES) \
	$(test_worldref_mpi_SOURCES)
DIST_SOURCES = $(libMADworld_la_SOURCES) $(test_ar_mpi_SOURCES) \
	$(test_atomicint_mpi_SOURCES) $(test_binsorter_mpi_SOURCES) \
	$(test_dc_mpi_SOURCES) $(test_future_mpi_SOURCES) \
	$(test_future2_mpi_SOURCES) $(test_future3_mpi_SOURCES) \
	$(test_hashdc_mpi_SOURCES) $(test_hashthreaded_mpi_SOURCES) \
	$(test_hello_mpi_SOURCES) $(test_prof_mpi_SOURCES) \
	$(test_queue_mpi_SOURCES) $(am__test_stack_seq_SOURCES_DIST) \
	$(am__test_vector_mpi_SOURCES_DIST) $(test_world_mpi_SOURCES) \
	$(test_worldprofile_mpi_SOURCES) \
	$(am__test_worldptr_mpi_SOURCES_DIST) \
	$(am__test_worldref_mpi_SOURCES_DIST)
HEADERS = $(thisinclude_HEADERS)
ETAGS = etags
CTAGS = ctags
am__tty_colors = \
red=; grn=; lgn=; blu=; std=
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /home/kimjins/madness/madness/config/missing --run aclocal-1.11
AMTAR = ${SHELL} /home/kimjins/madness/madness/config/missing --run tar
AR = ar
AUTOCONF = ${SHELL} /home/kimjins/madness/madness/config/missing --run autoconf
AUTOHEADER = ${SHELL} /home/kimjins/madness/madness/config/missing --run autoheader
AUTOMAKE = ${SHELL} /home/kimjins/madness/madness/config/missing --run automake-1.11
AWK = gawk
CC = mpicc
CCAS = mpicc
CCASDEPMODE = depmode=gcc3
CCASFLAGS = -g -O2 -O3 -Wall -Wno-strict-aliasing -Wno-deprecated -Wno-unused-local-typedefs
CCDEPMODE = depmode=gcc3
CFLAGS = -g -O2 -O3 -Wall -Wno-strict-aliasing -Wno-deprecated -Wno-unused-local-typedefs
CPP = mpicc -E
CPPFLAGS =  -DMPICH_SKIP_MPICXX=1 -DOMPI_SKIP_MPICXX=1
CXX = mpicxx
CXXCPP = mpicxx -E
CXXDEPMODE = depmode=gcc3
CXXFLAGS =  -std=c++11 -O3 -Wall -Wno-strict-aliasing -Wno-deprecated -Wno-unused-local-typedefs  -ffast-math -march=native
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DOT = /usr/bin/dot
DOXYGEN = /usr/bin/doxygen
DSYMUTIL = 
DUMPBIN = 
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/grep -E
EXEEXT = 
F77 = gfortran
FFLAGS = -g -O2
FGREP = /bin/grep -F
GDB = gdb
GREP = /bin/grep
GTEST_CPPFLAGS = 
GTEST_CXXFLAGS = 
GTEST_LDFLAGS = 
GTEST_LIBS = 
HAVE_CXX11 = 
HAVE_DOT = YES
HAVE_DOXYGEN = YES
HAVE_LATEX = YES
HAVE_PDFLATEX = YES
HAVE_SED = YES
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
LATEX = /usr/bin/latex
LD = /usr/bin/ld -m elf_x86_64
LDFLAGS = 
LIBOBJS = 
LIBS =  -L/opt/intel/mkl/lib/intel64 -Wl,--start-group -lmkl_intel_lp64 -lmkl_core -lmkl_sequential -Wl,--end-group -lpthread -lm -ldl  
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LIB_SUFFIX = .so
LIPO = 
LN_S = ln -s
LTLIBOBJS = 
MADNESS_FORTRAN_DEFAULT_INTEGER_SIZE = 4
MAKEINFO = ${SHELL} /home/kimjins/madness/madness/config/missing --run makeinfo
MKDIR_P = /bin/mkdir -p
MKLROOT = 
MPICC = mpicc
MPICXX = mpicxx
NM = /usr/bin/nm -B
NMEDIT = 
OBJDUMP = objdump
OBJEXT = o
OTOOL = 
OTOOL64 = 
PACKAGE = madness
PACKAGE_BUGREPORT = https://github.com/m-a-d-n-e-s-s/madness/issues
PACKAGE_NAME = MADNESS
PACKAGE_STRING = MADNESS 0.10.1
PACKAGE_TARNAME = madness
PACKAGE_VERSION = 0.10.1
PATH_SEPARATOR = :
PDFLATEX = /usr/bin/pdflatex
RANLIB = ranlib
SED = /bin/sed
SET_MAKE = 
SHELL = /bin/sh
STRIP = strip
VERSION = 0.10.1
XTERM = xterm
abs_builddir = /home/kimjins/madness/madness/build/src/madness/world
abs_srcdir = /home/kimjins/madness/madness/build/../src/madness/world
abs_top_builddir = /home/kimjins/madness/madness/build
abs_top_srcdir = /home/kimjins/madness/madness/build/..
ac_ct_CC = gcc
ac_ct_CXX = 
ac_ct_DUMPBIN = 
ac_ct_F77 = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = ${AMTAR} chof - "$$tardir"
am__untar = ${AMTAR} xf -
bindir = ${exec_prefix}/bin
build = x86_64-unknown-linux-gnu
build_alias = 
build_cpu = x86_64
build_os = linux-gnu
build_vendor = unknown
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
enable_shared = yes
enable_static = yes
exec_prefix = ${prefix}
host = x86_64-unknown-linux-gnu
host_alias = 
host_cpu = x86_64
host_os = linux-gnu
host_vendor = unknown
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /home/kimjins/madness/madness/config/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
lt_ECHO = echo
mandir = ${datarootdir}/man
mkdir_p = /bin/mkdir -p
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /homes/naromero/mpich2-1.5-GCC4.7.3
program_transform_name = s,x,x,
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = ../../../../src/madness/world
sysconfdir = ${prefix}/etc
target_alias = 
top_build_prefix = ../../../
top_builddir = ../../..
top_srcdir = ../../../..

# Define paths for includes (note convention #include <dir/file.h>)
AM_CPPFLAGS = -I$(top_srcdir)/src -I$(top_builddir)/src -I$(top_srcdir)/src/apps
#AM_LDFLAGS = -all-static

# Define directories holding libraries and variables for corresponding libraries
LIBGTESTDIR = $(top_builddir)/src/madness/external/gtest
LIBWORLDDIR = $(top_builddir)/src/madness/world
LIBTENSORDIR = $(top_builddir)/src/madness/tensor
LIBMISCDIR = $(top_builddir)/src/madness/misc
LIBMRADIR = $(top_builddir)/src/madness/mra
LIBCHEMDIR = $(top_builddir)/src/apps/chem
LIBTINYXMLDIR = $(top_builddir)/src/madness/external/tinyxml
LIBMUPARSERDIR = $(top_builddir)/src/madness/external/muParser
LIBGTEST = $(LIBGTESTDIR)/libMADgtest.la
LIBWORLD = $(LIBWORLDDIR)/libMADworld.la
LIBTENSOR = $(LIBTENSORDIR)/libMADtensor.la
LIBLINALG = $(LIBTENSORDIR)/libMADlinalg.la
LIBMISC = $(LIBMISCDIR)/libMADmisc.la
LIBMRA = $(LIBMRADIR)/libMADmra.la
LIBCHEM = $(LIBCHEMDIR)/libMADchem.la
LIBTINYXML = $(LIBTINYXMLDIR)/libMADtinyxml.la
LIBMUPARSER = $(LIBMUPARSERDIR)/libMADmuparser.la

# Most scientific/numeric applications will link against these libraries
MRALIBS = $(LIBMRA) $(LIBLINALG) $(LIBTENSOR) $(LIBMISC) $(LIBMUPARSER) $(LIBTINYXML) $(LIBWORLD) 
LIBGTEST_CPPFLAGS = $(GTEST_CPPFLAGS) -DGTEST_HAS_PTHREAD=1 -isystem $(top_srcdir)/src/madness/external/gtest/include $(AM_CPPFLAGS)
LIBGTEST_CXXFLAGS = $(GTEST_CXXFLAGS)  $(AM_CXXFLAGS)
LIBGTEST_LIBS = $(GTEST_LDFLAGS) $(GTEST_LIBS)
EXTRA_DIST = CMakeLists.txt

# specify the git commit version in the info functions
GITREV = "MADNESS_GITREVISION=\"`git --git-dir=$(top_srcdir)/.git rev-parse HEAD`\" "
lib_LTLIBRARIES = libMADworld.la
thisincludedir = $(includedir)/madness/world
thisinclude_HEADERS = info.h archive.h print.h worldam.h future.h worldmpi.h \
	world_task_queue.h array_addons.h stack.h vector.h worldgop.h \
	world_object.h buffer_archive.h \
	nodefaults.h dependency_interface.h worldhash.h worldref.h worldtypes.h \
	dqueue.h parallel_archive.h vector_archive.h madness_exception.h \
	worldmem.h thread.h worldrmi.h safempi.h worldpapi.h worldmutex.h \
	print_seq.h worldhashmap.h range.h atomicint.h posixmem.h worldptr.h \
	deferred_cleanup.h MADworld.h world.h uniqueid.h worldprofile.h \
	timers.h binary_fstream_archive.h mpi_archive.h text_fstream_archive.h \
	worlddc.h mem_func_wrapper.h taskfn.h group.h dist_cache.h \
	distributed_id.h type_traits.h \
	function_traits.h stubmpi.h bgq_atomics.h binsorter.h

#XFAIL_TESTS = test_googletest.mpi
TEST_EXTENSIONS = .mpi .seq

# tests run by mpirun
MPI_LOG_COMPILER = $(MPIRUN)
AM_MPI_LOG_FLAGS = $(MPIFLAGS)

# sequential tests
SEQ_LOG_COMPILER = 
AM_SEQ_LOG_FLAGS = 

# default test (= sequential)
LOG_COMPILER = 
AM_LOG_FLAGS = 
test_prof_mpi_SOURCES = test_prof.cc
test_prof_mpi_LDADD = libMADworld.la
test_binsorter_mpi_SOURCES = test_binsorter.cc
test_binsorter_mpi_LDADD = libMADworld.la
test_ar_mpi_SOURCES = test_ar.cc
test_ar_mpi_LDADD = libMADworld.la
test_hashdc_mpi_SOURCES = test_hashdc.cc
test_hashdc_mpi_LDADD = libMADworld.la
test_future_mpi_SOURCES = test_future.cc
test_future_mpi_LDADD = libMADworld.la
test_hello_mpi_SOURCES = test_hello.cc
test_hello_mpi_LDADD = libMADworld.la
test_atomicint_mpi_SOURCES = test_atomicint.cc
test_atomicint_mpi_LDADD = libMADworld.la
test_future2_mpi_SOURCES = test_future2.cc
test_future2_mpi_LDADD = libMADworld.la
test_future3_mpi_SOURCES = test_future3.cc
test_future3_mpi_LDADD = libMADworld.la
test_dc_mpi_SOURCES = test_dc.cc
test_dc_mpi_LDADD = libMADworld.la
test_hashthreaded_mpi_SOURCES = test_hashthreaded.cc
test_hashthreaded_mpi_LDADD = libMADworld.la
test_queue_mpi_SOURCES = test_queue.cc
test_queue_mpi_LDADD = libMADworld.la
test_world_mpi_SOURCES = test_world.cc
test_world_mpi_LDADD = libMADworld.la
test_worldprofile_mpi_SOURCES = test_worldprofile.cc
test_worldprofile_mpi_LDADD = libMADworld.la
#test_vector_mpi_SOURCES = test_vector.cc
#test_vector_mpi_CPPFLAGS = $(LIBGTEST_CPPFLAGS)
#test_vector_mpi_CXXFLAGS = $(LIBGTEST_CXXFLAGS)
#test_vector_mpi_LDADD = $(LIBGTEST_LIBS) $(LIBGTEST) libMADworld.la

#test_googletest_mpi_SOURCES = test_googletest.cc
#test_googletest_mpi_CPPFLAGS = $(LIBGTEST_CPPFLAGS)
#test_googletest_mpi_CXXFLAGS = $(LIBGTEST_CXXFLAGS)
#test_googletest_mpi_LDADD = $(LIBGTEST_LIBS) $(LIBGTEST) libMADworld.la
#test_worldptr_mpi_SOURCES = test_worldptr.cc
#test_worldptr_mpi_CPPFLAGS = $(LIBGTEST_CPPFLAGS)
#test_worldptr_mpi_CXXFLAGS = $(LIBGTEST_CXXFLAGS)
#test_worldptr_mpi_LDADD = $(LIBGTEST_LIBS) $(LIBGTEST) libMADworld.la
#test_worldref_mpi_SOURCES = test_worldref.cc
#test_worldref_mpi_CPPFLAGS = $(LIBGTEST_CPPFLAGS)
#test_worldref_mpi_CXXFLAGS = $(LIBGTEST_CXXFLAGS)
#test_worldref_mpi_LDADD = $(LIBGTEST_LIBS) $(LIBGTEST) libMADworld.la
#test_stack_seq_SOURCES = test_stack.cc
#test_stack_seq_CPPFLAGS = $(LIBGTEST_CPPFLAGS)
#test_stack_seq_CXXFLAGS = $(LIBGTEST_CXXFLAGS)
#test_stack_seq_LDADD = $(LIBGTEST_LIBS) $(LIBGTEST) libMADworld.la
libMADworld_la_SOURCES = madness_exception.cc world.cc timers.cc future.cc \
	redirectio.cc archive_type_names.cc info.cc \
	debug.cc print.cc worldmem.cc worldrmi.cc safempi.cc worldpapi.cc \
	worldref.cc worldam.cc worldprofile.cc thread.cc world_task_queue.cc \
	worldgop.cc deferred_cleanup.cc worldmutex.cc binary_fstream_archive.cc \
	text_fstream_archive.cc lookup3.c worldmpi.cc group.cc \
	$(thisinclude_HEADERS)

libMADworld_la_CPPFLAGS = $(AM_CPPFLAGS) -D$(GITREV)
libMADworld_la_LDFLAGS = -version-info 0:0:0
MOSTLYCLEANFILES = test.dat testme.ar
all: all-am

.SUFFIXES:
.SUFFIXES: .c .cc .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am $(top_srcdir)/config/MakeGlobal.am $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign src/madness/world/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign src/madness/world/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):
install-libLTLIBRARIES: $(lib_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	test -z "$(libdir)" || $(MKDIR_P) "$(DESTDIR)$(libdir)"
	@list='$(lib_LTLIBRARIES)'; test -n "$(libdir)" || list=; \
	list2=; for p in $$list; do \
	  if test -f $$p; then \
	    list2="$$list2 $$p"; \
	  else :; fi; \
	done; \
	test -z "$$list2" || { \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 '$(DESTDIR)$(libdir)'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 "$(DESTDIR)$(libdir)"; \
	}

uninstall-libLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(lib_LTLIBRARIES)'; test -n "$(libdir)" || list=; \
	for p in $$list; do \
	  $(am__strip_dir) \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f '$(DESTDIR)$(libdir)/$$f'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f "$(DESTDIR)$(libdir)/$$f"; \
	done

clean-libLTLIBRARIES:
	-test -z "$(lib_LTLIBRARIES)" || rm -f $(lib_LTLIBRARIES)
	@list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
	  test "$$dir" != "$$p" || dir=.; \
	  echo "rm -f \"$${dir}/so_locations\""; \
	  rm -f "$${dir}/so_locations"; \
	done
libMADworld.la: $(libMADworld_la_OBJECTS) $(libMADworld_la_DEPENDENCIES) 
	$(libMADworld_la_LINK) -rpath $(libdir) $(libMADworld_la_OBJECTS) $(libMADworld_la_LIBADD) $(LIBS)

clean-noinstPROGRAMS:
	@list='$(noinst_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list
test_ar.mpi$(EXEEXT): $(test_ar_mpi_OBJECTS) $(test_ar_mpi_DEPENDENCIES) 
	@rm -f test_ar.mpi$(EXEEXT)
	$(CXXLINK) $(test_ar_mpi_OBJECTS) $(test_ar_mpi_LDADD) $(LIBS)
test_atomicint.mpi$(EXEEXT): $(test_atomicint_mpi_OBJECTS) $(test_atomicint_mpi_DEPENDENCIES) 
	@rm -f test_atomicint.mpi$(EXEEXT)
	$(CXXLINK) $(test_atomicint_mpi_OBJECTS) $(test_atomicint_mpi_LDADD) $(LIBS)
test_binsorter.mpi$(EXEEXT): $(test_binsorter_mpi_OBJECTS) $(test_binsorter_mpi_DEPENDENCIES) 
	@rm -f test_binsorter.mpi$(EXEEXT)
	$(CXXLINK) $(test_binsorter_mpi_OBJECTS) $(test_binsorter_mpi_LDADD) $(LIBS)
test_dc.mpi$(EXEEXT): $(test_dc_mpi_OBJECTS) $(test_dc_mpi_DEPENDENCIES) 
	@rm -f test_dc.mpi$(EXEEXT)
	$(CXXLINK) $(test_dc_mpi_OBJECTS) $(test_dc_mpi_LDADD) $(LIBS)
test_future.mpi$(EXEEXT): $(test_future_mpi_OBJECTS) $(test_future_mpi_DEPENDENCIES) 
	@rm -f test_future.mpi$(EXEEXT)
	$(CXXLINK) $(test_future_mpi_OBJECTS) $(test_future_mpi_LDADD) $(LIBS)
test_future2.mpi$(EXEEXT): $(test_future2_mpi_OBJECTS) $(test_future2_mpi_DEPENDENCIES) 
	@rm -f test_future2.mpi$(EXEEXT)
	$(CXXLINK) $(test_future2_mpi_OBJECTS) $(test_future2_mpi_LDADD) $(LIBS)
test_future3.mpi$(EXEEXT): $(test_future3_mpi_OBJECTS) $(test_future3_mpi_DEPENDENCIES) 
	@rm -f test_future3.mpi$(EXEEXT)
	$(CXXLINK) $(test_future3_mpi_OBJECTS) $(test_future3_mpi_LDADD) $(LIBS)
test_hashdc.mpi$(EXEEXT): $(test_hashdc_mpi_OBJECTS) $(test_hashdc_mpi_DEPENDENCIES) 
	@rm -f test_hashdc.mpi$(EXEEXT)
	$(CXXLINK) $(test_hashdc_mpi_OBJECTS) $(test_hashdc_mpi_LDADD) $(LIBS)
test_hashthreaded.mpi$(EXEEXT): $(test_hashthreaded_mpi_OBJECTS) $(test_hashthreaded_mpi_DEPENDENCIES) 
	@rm -f test_hashthreaded.mpi$(EXEEXT)
	$(CXXLINK) $(test_hashthreaded_mpi_OBJECTS) $(test_hashthreaded_mpi_LDADD) $(LIBS)
test_hello.mpi$(EXEEXT): $(test_hello_mpi_OBJECTS) $(test_hello_mpi_DEPENDENCIES) 
	@rm -f test_hello.mpi$(EXEEXT)
	$(CXXLINK) $(test_hello_mpi_OBJECTS) $(test_hello_mpi_LDADD) $(LIBS)
test_prof.mpi$(EXEEXT): $(test_prof_mpi_OBJECTS) $(test_prof_mpi_DEPENDENCIES) 
	@rm -f test_prof.mpi$(EXEEXT)
	$(CXXLINK) $(test_prof_mpi_OBJECTS) $(test_prof_mpi_LDADD) $(LIBS)
test_queue.mpi$(EXEEXT): $(test_queue_mpi_OBJECTS) $(test_queue_mpi_DEPENDENCIES) 
	@rm -f test_queue.mpi$(EXEEXT)
	$(CXXLINK) $(test_queue_mpi_OBJECTS) $(test_queue_mpi_LDADD) $(LIBS)
test_stack.seq$(EXEEXT): $(test_stack_seq_OBJECTS) $(test_stack_seq_DEPENDENCIES) 
	@rm -f test_stack.seq$(EXEEXT)
	$(test_stack_seq_LINK) $(test_stack_seq_OBJECTS) $(test_stack_seq_LDADD) $(LIBS)
test_vector.mpi$(EXEEXT): $(test_vector_mpi_OBJECTS) $(test_vector_mpi_DEPENDENCIES) 
	@rm -f test_vector.mpi$(EXEEXT)
	$(test_vector_mpi_LINK) $(test_vector_mpi_OBJECTS) $(test_vector_mpi_LDADD) $(LIBS)
test_world.mpi$(EXEEXT): $(test_world_mpi_OBJECTS) $(test_world_mpi_DEPENDENCIES) 
	@rm -f test_world.mpi$(EXEEXT)
	$(CXXLINK) $(test_world_mpi_OBJECTS) $(test_world_mpi_LDADD) $(LIBS)
test_worldprofile.mpi$(EXEEXT): $(test_worldprofile_mpi_OBJECTS) $(test_worldprofile_mpi_DEPENDENCIES) 
	@rm -f test_worldprofile.mpi$(EXEEXT)
	$(CXXLINK) $(test_worldprofile_mpi_OBJECTS) $(test_worldprofile_mpi_LDADD) $(LIBS)
test_worldptr.mpi$(EXEEXT): $(test_worldptr_mpi_OBJECTS) $(test_worldptr_mpi_DEPENDENCIES) 
	@rm -f test_worldptr.mpi$(EXEEXT)
	$(test_worldptr_mpi_LINK) $(test_worldptr_mpi_OBJECTS) $(test_worldptr_mpi_LDADD) $(LIBS)
test_worldref.mpi$(EXEEXT): $(test_worldref_mpi_OBJECTS) $(test_worldref_mpi_DEPENDENCIES) 
	@rm -f test_worldref.mpi$(EXEEXT)
	$(test_worldref_mpi_LINK) $(test_worldref_mpi_OBJECTS) $(test_worldref_mpi_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/libMADworld_la-archive_type_names.Plo
include ./$(DEPDIR)/libMADworld_la-binary_fstream_archive.Plo
include ./$(DEPDIR)/libMADworld_la-debug.Plo
include ./$(DEPDIR)/libMADworld_la-deferred_cleanup.Plo
include ./$(DEPDIR)/libMADworld_la-future.Plo
include ./$(DEPDIR)/libMADworld_la-group.Plo
include ./$(DEPDIR)/libMADworld_la-info.Plo
include ./$(DEPDIR)/libMADworld_la-lookup3.Plo
include ./$(DEPDIR)/libMADworld_la-madness_exception.Plo
include ./$(DEPDIR)/libMADworld_la-print.Plo
include ./$(DEPDIR)/libMADworld_la-redirectio.Plo
include ./$(DEPDIR)/libMADworld_la-safempi.Plo
include ./$(DEPDIR)/libMADworld_la-text_fstream_archive.Plo
include ./$(DEPDIR)/libMADworld_la-thread.Plo
include ./$(DEPDIR)/libMADworld_la-timers.Plo
include ./$(DEPDIR)/libMADworld_la-world.Plo
include ./$(DEPDIR)/libMADworld_la-world_task_queue.Plo
include ./$(DEPDIR)/libMADworld_la-worldam.Plo
include ./$(DEPDIR)/libMADworld_la-worldgop.Plo
include ./$(DEPDIR)/libMADworld_la-worldmem.Plo
include ./$(DEPDIR)/libMADworld_la-worldmpi.Plo
include ./$(DEPDIR)/libMADworld_la-worldmutex.Plo
include ./$(DEPDIR)/libMADworld_la-worldpapi.Plo
include ./$(DEPDIR)/libMADworld_la-worldprofile.Plo
include ./$(DEPDIR)/libMADworld_la-worldref.Plo
include ./$(DEPDIR)/libMADworld_la-worldrmi.Plo
include ./$(DEPDIR)/test_ar.Po
include ./$(DEPDIR)/test_atomicint.Po
include ./$(DEPDIR)/test_binsorter.Po
include ./$(DEPDIR)/test_dc.Po
include ./$(DEPDIR)/test_future.Po
include ./$(DEPDIR)/test_future2.Po
include ./$(DEPDIR)/test_future3.Po
include ./$(DEPDIR)/test_hashdc.Po
include ./$(DEPDIR)/test_hashthreaded.Po
include ./$(DEPDIR)/test_hello.Po
include ./$(DEPDIR)/test_prof.Po
include ./$(DEPDIR)/test_queue.Po
include ./$(DEPDIR)/test_stack_seq-test_stack.Po
include ./$(DEPDIR)/test_vector_mpi-test_vector.Po
include ./$(DEPDIR)/test_world.Po
include ./$(DEPDIR)/test_worldprofile.Po
include ./$(DEPDIR)/test_worldptr_mpi-test_worldptr.Po
include ./$(DEPDIR)/test_worldref_mpi-test_worldref.Po

.c.o:
	$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c $<

.c.obj:
	$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c `$(CYGPATH_W) '$<'`

.c.lo:
	$(LTCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
#	source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LTCOMPILE) -c -o $@ $<

libMADworld_la-lookup3.lo: lookup3.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADworld_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libMADworld_la-lookup3.lo -MD -MP -MF $(DEPDIR)/libMADworld_la-lookup3.Tpo -c -o libMADworld_la-lookup3.lo `test -f 'lookup3.c' || echo '$(srcdir)/'`lookup3.c
	$(am__mv) $(DEPDIR)/libMADworld_la-lookup3.Tpo $(DEPDIR)/libMADworld_la-lookup3.Plo
#	source='lookup3.c' object='libMADworld_la-lookup3.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADworld_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libMADworld_la-lookup3.lo `test -f 'lookup3.c' || echo '$(srcdir)/'`lookup3.c

.cc.o:
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ $<

.cc.obj:
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cc.lo:
	$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
#	source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LTCXXCOMPILE) -c -o $@ $<

libMADworld_la-madness_exception.lo: madness_exception.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADworld_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libMADworld_la-madness_exception.lo -MD -MP -MF $(DEPDIR)/libMADworld_la-madness_exception.Tpo -c -o libMADworld_la-madness_exception.lo `test -f 'madness_exception.cc' || echo '$(srcdir)/'`madness_exception.cc
	$(am__mv) $(DEPDIR)/libMADworld_la-madness_exception.Tpo $(DEPDIR)/libMADworld_la-madness_exception.Plo
#	source='madness_exception.cc' object='libMADworld_la-madness_exception.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADworld_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libMADworld_la-madness_exception.lo `test -f 'madness_exception.cc' || echo '$(srcdir)/'`madness_exception.cc

libMADworld_la-world.lo: world.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADworld_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libMADworld_la-world.lo -MD -MP -MF $(DEPDIR)/libMADworld_la-world.Tpo -c -o libMADworld_la-world.lo `test -f 'world.cc' || echo '$(srcdir)/'`world.cc
	$(am__mv) $(DEPDIR)/libMADworld_la-world.Tpo $(DEPDIR)/libMADworld_la-world.Plo
#	source='world.cc' object='libMADworld_la-world.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADworld_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libMADworld_la-world.lo `test -f 'world.cc' || echo '$(srcdir)/'`world.cc

libMADworld_la-timers.lo: timers.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADworld_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libMADworld_la-timers.lo -MD -MP -MF $(DEPDIR)/libMADworld_la-timers.Tpo -c -o libMADworld_la-timers.lo `test -f 'timers.cc' || echo '$(srcdir)/'`timers.cc
	$(am__mv) $(DEPDIR)/libMADworld_la-timers.Tpo $(DEPDIR)/libMADworld_la-timers.Plo
#	source='timers.cc' object='libMADworld_la-timers.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADworld_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libMADworld_la-timers.lo `test -f 'timers.cc' || echo '$(srcdir)/'`timers.cc

libMADworld_la-future.lo: future.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADworld_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libMADworld_la-future.lo -MD -MP -MF $(DEPDIR)/libMADworld_la-future.Tpo -c -o libMADworld_la-future.lo `test -f 'future.cc' || echo '$(srcdir)/'`future.cc
	$(am__mv) $(DEPDIR)/libMADworld_la-future.Tpo $(DEPDIR)/libMADworld_la-future.Plo
#	source='future.cc' object='libMADworld_la-future.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADworld_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libMADworld_la-future.lo `test -f 'future.cc' || echo '$(srcdir)/'`future.cc

libMADworld_la-redirectio.lo: redirectio.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADworld_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libMADworld_la-redirectio.lo -MD -MP -MF $(DEPDIR)/libMADworld_la-redirectio.Tpo -c -o libMADworld_la-redirectio.lo `test -f 'redirectio.cc' || echo '$(srcdir)/'`redirectio.cc
	$(am__mv) $(DEPDIR)/libMADworld_la-redirectio.Tpo $(DEPDIR)/libMADworld_la-redirectio.Plo
#	source='redirectio.cc' object='libMADworld_la-redirectio.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADworld_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libMADworld_la-redirectio.lo `test -f 'redirectio.cc' || echo '$(srcdir)/'`redirectio.cc

libMADworld_la-archive_type_names.lo: archive_type_names.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADworld_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libMADworld_la-archive_type_names.lo -MD -MP -MF $(DEPDIR)/libMADworld_la-archive_type_names.Tpo -c -o libMADworld_la-archive_type_names.lo `test -f 'archive_type_names.cc' || echo '$(srcdir)/'`archive_type_names.cc
	$(am__mv) $(DEPDIR)/libMADworld_la-archive_type_names.Tpo $(DEPDIR)/libMADworld_la-archive_type_names.Plo
#	source='archive_type_names.cc' object='libMADworld_la-archive_type_names.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADworld_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libMADworld_la-archive_type_names.lo `test -f 'archive_type_names.cc' || echo '$(srcdir)/'`archive_type_names.cc

libMADworld_la-info.lo: info.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADworld_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libMADworld_la-info.lo -MD -MP -MF $(DEPDIR)/libMADworld_la-info.Tpo -c -o libMADworld_la-info.lo `test -f 'info.cc' || echo '$(srcdir)/'`info.cc
	$(am__mv) $(DEPDIR)/libMADworld_la-info.Tpo $(DEPDIR)/libMADworld_la-info.Plo
#	source='info.cc' object='libMADworld_la-info.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADworld_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libMADworld_la-info.lo `test -f 'info.cc' || echo '$(srcdir)/'`info.cc

libMADworld_la-debug.lo: debug.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADworld_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libMADworld_la-debug.lo -MD -MP -MF $(DEPDIR)/libMADworld_la-debug.Tpo -c -o libMADworld_la-debug.lo `test -f 'debug.cc' || echo '$(srcdir)/'`debug.cc
	$(am__mv) $(DEPDIR)/libMADworld_la-debug.Tpo $(DEPDIR)/libMADworld_la-debug.Plo
#	source='debug.cc' object='libMADworld_la-debug.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADworld_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libMADworld_la-debug.lo `test -f 'debug.cc' || echo '$(srcdir)/'`debug.cc

libMADworld_la-print.lo: print.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADworld_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libMADworld_la-print.lo -MD -MP -MF $(DEPDIR)/libMADworld_la-print.Tpo -c -o libMADworld_la-print.lo `test -f 'print.cc' || echo '$(srcdir)/'`print.cc
	$(am__mv) $(DEPDIR)/libMADworld_la-print.Tpo $(DEPDIR)/libMADworld_la-print.Plo
#	source='print.cc' object='libMADworld_la-print.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADworld_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libMADworld_la-print.lo `test -f 'print.cc' || echo '$(srcdir)/'`print.cc

libMADworld_la-worldmem.lo: worldmem.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADworld_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libMADworld_la-worldmem.lo -MD -MP -MF $(DEPDIR)/libMADworld_la-worldmem.Tpo -c -o libMADworld_la-worldmem.lo `test -f 'worldmem.cc' || echo '$(srcdir)/'`worldmem.cc
	$(am__mv) $(DEPDIR)/libMADworld_la-worldmem.Tpo $(DEPDIR)/libMADworld_la-worldmem.Plo
#	source='worldmem.cc' object='libMADworld_la-worldmem.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADworld_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libMADworld_la-worldmem.lo `test -f 'worldmem.cc' || echo '$(srcdir)/'`worldmem.cc

libMADworld_la-worldrmi.lo: worldrmi.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADworld_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libMADworld_la-worldrmi.lo -MD -MP -MF $(DEPDIR)/libMADworld_la-worldrmi.Tpo -c -o libMADworld_la-worldrmi.lo `test -f 'worldrmi.cc' || echo '$(srcdir)/'`worldrmi.cc
	$(am__mv) $(DEPDIR)/libMADworld_la-worldrmi.Tpo $(DEPDIR)/libMADworld_la-worldrmi.Plo
#	source='worldrmi.cc' object='libMADworld_la-worldrmi.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADworld_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libMADworld_la-worldrmi.lo `test -f 'worldrmi.cc' || echo '$(srcdir)/'`worldrmi.cc

libMADworld_la-safempi.lo: safempi.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADworld_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libMADworld_la-safempi.lo -MD -MP -MF $(DEPDIR)/libMADworld_la-safempi.Tpo -c -o libMADworld_la-safempi.lo `test -f 'safempi.cc' || echo '$(srcdir)/'`safempi.cc
	$(am__mv) $(DEPDIR)/libMADworld_la-safempi.Tpo $(DEPDIR)/libMADworld_la-safempi.Plo
#	source='safempi.cc' object='libMADworld_la-safempi.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADworld_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libMADworld_la-safempi.lo `test -f 'safempi.cc' || echo '$(srcdir)/'`safempi.cc

libMADworld_la-worldpapi.lo: worldpapi.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADworld_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libMADworld_la-worldpapi.lo -MD -MP -MF $(DEPDIR)/libMADworld_la-worldpapi.Tpo -c -o libMADworld_la-worldpapi.lo `test -f 'worldpapi.cc' || echo '$(srcdir)/'`worldpapi.cc
	$(am__mv) $(DEPDIR)/libMADworld_la-worldpapi.Tpo $(DEPDIR)/libMADworld_la-worldpapi.Plo
#	source='worldpapi.cc' object='libMADworld_la-worldpapi.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADworld_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libMADworld_la-worldpapi.lo `test -f 'worldpapi.cc' || echo '$(srcdir)/'`worldpapi.cc

libMADworld_la-worldref.lo: worldref.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADworld_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libMADworld_la-worldref.lo -MD -MP -MF $(DEPDIR)/libMADworld_la-worldref.Tpo -c -o libMADworld_la-worldref.lo `test -f 'worldref.cc' || echo '$(srcdir)/'`worldref.cc
	$(am__mv) $(DEPDIR)/libMADworld_la-worldref.Tpo $(DEPDIR)/libMADworld_la-worldref.Plo
#	source='worldref.cc' object='libMADworld_la-worldref.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADworld_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libMADworld_la-worldref.lo `test -f 'worldref.cc' || echo '$(srcdir)/'`worldref.cc

libMADworld_la-worldam.lo: worldam.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADworld_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libMADworld_la-worldam.lo -MD -MP -MF $(DEPDIR)/libMADworld_la-worldam.Tpo -c -o libMADworld_la-worldam.lo `test -f 'worldam.cc' || echo '$(srcdir)/'`worldam.cc
	$(am__mv) $(DEPDIR)/libMADworld_la-worldam.Tpo $(DEPDIR)/libMADworld_la-worldam.Plo
#	source='worldam.cc' object='libMADworld_la-worldam.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADworld_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libMADworld_la-worldam.lo `test -f 'worldam.cc' || echo '$(srcdir)/'`worldam.cc

libMADworld_la-worldprofile.lo: worldprofile.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADworld_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libMADworld_la-worldprofile.lo -MD -MP -MF $(DEPDIR)/libMADworld_la-worldprofile.Tpo -c -o libMADworld_la-worldprofile.lo `test -f 'worldprofile.cc' || echo '$(srcdir)/'`worldprofile.cc
	$(am__mv) $(DEPDIR)/libMADworld_la-worldprofile.Tpo $(DEPDIR)/libMADworld_la-worldprofile.Plo
#	source='worldprofile.cc' object='libMADworld_la-worldprofile.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADworld_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libMADworld_la-worldprofile.lo `test -f 'worldprofile.cc' || echo '$(srcdir)/'`worldprofile.cc

libMADworld_la-thread.lo: thread.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADworld_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libMADworld_la-thread.lo -MD -MP -MF $(DEPDIR)/libMADworld_la-thread.Tpo -c -o libMADworld_la-thread.lo `test -f 'thread.cc' || echo '$(srcdir)/'`thread.cc
	$(am__mv) $(DEPDIR)/libMADworld_la-thread.Tpo $(DEPDIR)/libMADworld_la-thread.Plo
#	source='thread.cc' object='libMADworld_la-thread.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADworld_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libMADworld_la-thread.lo `test -f 'thread.cc' || echo '$(srcdir)/'`thread.cc

libMADworld_la-world_task_queue.lo: world_task_queue.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADworld_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libMADworld_la-world_task_queue.lo -MD -MP -MF $(DEPDIR)/libMADworld_la-world_task_queue.Tpo -c -o libMADworld_la-world_task_queue.lo `test -f 'world_task_queue.cc' || echo '$(srcdir)/'`world_task_queue.cc
	$(am__mv) $(DEPDIR)/libMADworld_la-world_task_queue.Tpo $(DEPDIR)/libMADworld_la-world_task_queue.Plo
#	source='world_task_queue.cc' object='libMADworld_la-world_task_queue.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADworld_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libMADworld_la-world_task_queue.lo `test -f 'world_task_queue.cc' || echo '$(srcdir)/'`world_task_queue.cc

libMADworld_la-worldgop.lo: worldgop.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADworld_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libMADworld_la-worldgop.lo -MD -MP -MF $(DEPDIR)/libMADworld_la-worldgop.Tpo -c -o libMADworld_la-worldgop.lo `test -f 'worldgop.cc' || echo '$(srcdir)/'`worldgop.cc
	$(am__mv) $(DEPDIR)/libMADworld_la-worldgop.Tpo $(DEPDIR)/libMADworld_la-worldgop.Plo
#	source='worldgop.cc' object='libMADworld_la-worldgop.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADworld_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libMADworld_la-worldgop.lo `test -f 'worldgop.cc' || echo '$(srcdir)/'`worldgop.cc

libMADworld_la-deferred_cleanup.lo: deferred_cleanup.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADworld_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libMADworld_la-deferred_cleanup.lo -MD -MP -MF $(DEPDIR)/libMADworld_la-deferred_cleanup.Tpo -c -o libMADworld_la-deferred_cleanup.lo `test -f 'deferred_cleanup.cc' || echo '$(srcdir)/'`deferred_cleanup.cc
	$(am__mv) $(DEPDIR)/libMADworld_la-deferred_cleanup.Tpo $(DEPDIR)/libMADworld_la-deferred_cleanup.Plo
#	source='deferred_cleanup.cc' object='libMADworld_la-deferred_cleanup.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADworld_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libMADworld_la-deferred_cleanup.lo `test -f 'deferred_cleanup.cc' || echo '$(srcdir)/'`deferred_cleanup.cc

libMADworld_la-worldmutex.lo: worldmutex.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADworld_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libMADworld_la-worldmutex.lo -MD -MP -MF $(DEPDIR)/libMADworld_la-worldmutex.Tpo -c -o libMADworld_la-worldmutex.lo `test -f 'worldmutex.cc' || echo '$(srcdir)/'`worldmutex.cc
	$(am__mv) $(DEPDIR)/libMADworld_la-worldmutex.Tpo $(DEPDIR)/libMADworld_la-worldmutex.Plo
#	source='worldmutex.cc' object='libMADworld_la-worldmutex.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADworld_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libMADworld_la-worldmutex.lo `test -f 'worldmutex.cc' || echo '$(srcdir)/'`worldmutex.cc

libMADworld_la-binary_fstream_archive.lo: binary_fstream_archive.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADworld_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libMADworld_la-binary_fstream_archive.lo -MD -MP -MF $(DEPDIR)/libMADworld_la-binary_fstream_archive.Tpo -c -o libMADworld_la-binary_fstream_archive.lo `test -f 'binary_fstream_archive.cc' || echo '$(srcdir)/'`binary_fstream_archive.cc
	$(am__mv) $(DEPDIR)/libMADworld_la-binary_fstream_archive.Tpo $(DEPDIR)/libMADworld_la-binary_fstream_archive.Plo
#	source='binary_fstream_archive.cc' object='libMADworld_la-binary_fstream_archive.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADworld_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libMADworld_la-binary_fstream_archive.lo `test -f 'binary_fstream_archive.cc' || echo '$(srcdir)/'`binary_fstream_archive.cc

libMADworld_la-text_fstream_archive.lo: text_fstream_archive.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADworld_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libMADworld_la-text_fstream_archive.lo -MD -MP -MF $(DEPDIR)/libMADworld_la-text_fstream_archive.Tpo -c -o libMADworld_la-text_fstream_archive.lo `test -f 'text_fstream_archive.cc' || echo '$(srcdir)/'`text_fstream_archive.cc
	$(am__mv) $(DEPDIR)/libMADworld_la-text_fstream_archive.Tpo $(DEPDIR)/libMADworld_la-text_fstream_archive.Plo
#	source='text_fstream_archive.cc' object='libMADworld_la-text_fstream_archive.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADworld_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libMADworld_la-text_fstream_archive.lo `test -f 'text_fstream_archive.cc' || echo '$(srcdir)/'`text_fstream_archive.cc

libMADworld_la-worldmpi.lo: worldmpi.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADworld_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libMADworld_la-worldmpi.lo -MD -MP -MF $(DEPDIR)/libMADworld_la-worldmpi.Tpo -c -o libMADworld_la-worldmpi.lo `test -f 'worldmpi.cc' || echo '$(srcdir)/'`worldmpi.cc
	$(am__mv) $(DEPDIR)/libMADworld_la-worldmpi.Tpo $(DEPDIR)/libMADworld_la-worldmpi.Plo
#	source='worldmpi.cc' object='libMADworld_la-worldmpi.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADworld_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libMADworld_la-worldmpi.lo `test -f 'worldmpi.cc' || echo '$(srcdir)/'`worldmpi.cc

libMADworld_la-group.lo: group.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADworld_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libMADworld_la-group.lo -MD -MP -MF $(DEPDIR)/libMADworld_la-group.Tpo -c -o libMADworld_la-group.lo `test -f 'group.cc' || echo '$(srcdir)/'`group.cc
	$(am__mv) $(DEPDIR)/libMADworld_la-group.Tpo $(DEPDIR)/libMADworld_la-group.Plo
#	source='group.cc' object='libMADworld_la-group.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADworld_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libMADworld_la-group.lo `test -f 'group.cc' || echo '$(srcdir)/'`group.cc

test_stack_seq-test_stack.o: test_stack.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_stack_seq_CPPFLAGS) $(CPPFLAGS) $(test_stack_seq_CXXFLAGS) $(CXXFLAGS) -MT test_stack_seq-test_stack.o -MD -MP -MF $(DEPDIR)/test_stack_seq-test_stack.Tpo -c -o test_stack_seq-test_stack.o `test -f 'test_stack.cc' || echo '$(srcdir)/'`test_stack.cc
	$(am__mv) $(DEPDIR)/test_stack_seq-test_stack.Tpo $(DEPDIR)/test_stack_seq-test_stack.Po
#	source='test_stack.cc' object='test_stack_seq-test_stack.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_stack_seq_CPPFLAGS) $(CPPFLAGS) $(test_stack_seq_CXXFLAGS) $(CXXFLAGS) -c -o test_stack_seq-test_stack.o `test -f 'test_stack.cc' || echo '$(srcdir)/'`test_stack.cc

test_stack_seq-test_stack.obj: test_stack.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_stack_seq_CPPFLAGS) $(CPPFLAGS) $(test_stack_seq_CXXFLAGS) $(CXXFLAGS) -MT test_stack_seq-test_stack.obj -MD -MP -MF $(DEPDIR)/test_stack_seq-test_stack.Tpo -c -o test_stack_seq-test_stack.obj `if test -f 'test_stack.cc'; then $(CYGPATH_W) 'test_stack.cc'; else $(CYGPATH_W) '$(srcdir)/test_stack.cc'; fi`
	$(am__mv) $(DEPDIR)/test_stack_seq-test_stack.Tpo $(DEPDIR)/test_stack_seq-test_stack.Po
#	source='test_stack.cc' object='test_stack_seq-test_stack.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_stack_seq_CPPFLAGS) $(CPPFLAGS) $(test_stack_seq_CXXFLAGS) $(CXXFLAGS) -c -o test_stack_seq-test_stack.obj `if test -f 'test_stack.cc'; then $(CYGPATH_W) 'test_stack.cc'; else $(CYGPATH_W) '$(srcdir)/test_stack.cc'; fi`

test_vector_mpi-test_vector.o: test_vector.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_vector_mpi_CPPFLAGS) $(CPPFLAGS) $(test_vector_mpi_CXXFLAGS) $(CXXFLAGS) -MT test_vector_mpi-test_vector.o -MD -MP -MF $(DEPDIR)/test_vector_mpi-test_vector.Tpo -c -o test_vector_mpi-test_vector.o `test -f 'test_vector.cc' || echo '$(srcdir)/'`test_vector.cc
	$(am__mv) $(DEPDIR)/test_vector_mpi-test_vector.Tpo $(DEPDIR)/test_vector_mpi-test_vector.Po
#	source='test_vector.cc' object='test_vector_mpi-test_vector.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_vector_mpi_CPPFLAGS) $(CPPFLAGS) $(test_vector_mpi_CXXFLAGS) $(CXXFLAGS) -c -o test_vector_mpi-test_vector.o `test -f 'test_vector.cc' || echo '$(srcdir)/'`test_vector.cc

test_vector_mpi-test_vector.obj: test_vector.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_vector_mpi_CPPFLAGS) $(CPPFLAGS) $(test_vector_mpi_CXXFLAGS) $(CXXFLAGS) -MT test_vector_mpi-test_vector.obj -MD -MP -MF $(DEPDIR)/test_vector_mpi-test_vector.Tpo -c -o test_vector_mpi-test_vector.obj `if test -f 'test_vector.cc'; then $(CYGPATH_W) 'test_vector.cc'; else $(CYGPATH_W) '$(srcdir)/test_vector.cc'; fi`
	$(am__mv) $(DEPDIR)/test_vector_mpi-test_vector.Tpo $(DEPDIR)/test_vector_mpi-test_vector.Po
#	source='test_vector.cc' object='test_vector_mpi-test_vector.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_vector_mpi_CPPFLAGS) $(CPPFLAGS) $(test_vector_mpi_CXXFLAGS) $(CXXFLAGS) -c -o test_vector_mpi-test_vector.obj `if test -f 'test_vector.cc'; then $(CYGPATH_W) 'test_vector.cc'; else $(CYGPATH_W) '$(srcdir)/test_vector.cc'; fi`

test_worldptr_mpi-test_worldptr.o: test_worldptr.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_worldptr_mpi_CPPFLAGS) $(CPPFLAGS) $(test_worldptr_mpi_CXXFLAGS) $(CXXFLAGS) -MT test_worldptr_mpi-test_worldptr.o -MD -MP -MF $(DEPDIR)/test_worldptr_mpi-test_worldptr.Tpo -c -o test_worldptr_mpi-test_worldptr.o `test -f 'test_worldptr.cc' || echo '$(srcdir)/'`test_worldptr.cc
	$(am__mv) $(DEPDIR)/test_worldptr_mpi-test_worldptr.Tpo $(DEPDIR)/test_worldptr_mpi-test_worldptr.Po
#	source='test_worldptr.cc' object='test_worldptr_mpi-test_worldptr.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_worldptr_mpi_CPPFLAGS) $(CPPFLAGS) $(test_worldptr_mpi_CXXFLAGS) $(CXXFLAGS) -c -o test_worldptr_mpi-test_worldptr.o `test -f 'test_worldptr.cc' || echo '$(srcdir)/'`test_worldptr.cc

test_worldptr_mpi-test_worldptr.obj: test_worldptr.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_worldptr_mpi_CPPFLAGS) $(CPPFLAGS) $(test_worldptr_mpi_CXXFLAGS) $(CXXFLAGS) -MT test_worldptr_mpi-test_worldptr.obj -MD -MP -MF $(DEPDIR)/test_worldptr_mpi-test_worldptr.Tpo -c -o test_worldptr_mpi-test_worldptr.obj `if test -f 'test_worldptr.cc'; then $(CYGPATH_W) 'test_worldptr.cc'; else $(CYGPATH_W) '$(srcdir)/test_worldptr.cc'; fi`
	$(am__mv) $(DEPDIR)/test_worldptr_mpi-test_worldptr.Tpo $(DEPDIR)/test_worldptr_mpi-test_worldptr.Po
#	source='test_worldptr.cc' object='test_worldptr_mpi-test_worldptr.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_worldptr_mpi_CPPFLAGS) $(CPPFLAGS) $(test_worldptr_mpi_CXXFLAGS) $(CXXFLAGS) -c -o test_worldptr_mpi-test_worldptr.obj `if test -f 'test_worldptr.cc'; then $(CYGPATH_W) 'test_worldptr.cc'; else $(CYGPATH_W) '$(srcdir)/test_worldptr.cc'; fi`

test_worldref_mpi-test_worldref.o: test_worldref.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_worldref_mpi_CPPFLAGS) $(CPPFLAGS) $(test_worldref_mpi_CXXFLAGS) $(CXXFLAGS) -MT test_worldref_mpi-test_worldref.o -MD -MP -MF $(DEPDIR)/test_worldref_mpi-test_worldref.Tpo -c -o test_worldref_mpi-test_worldref.o `test -f 'test_worldref.cc' || echo '$(srcdir)/'`test_worldref.cc
	$(am__mv) $(DEPDIR)/test_worldref_mpi-test_worldref.Tpo $(DEPDIR)/test_worldref_mpi-test_worldref.Po
#	source='test_worldref.cc' object='test_worldref_mpi-test_worldref.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_worldref_mpi_CPPFLAGS) $(CPPFLAGS) $(test_worldref_mpi_CXXFLAGS) $(CXXFLAGS) -c -o test_worldref_mpi-test_worldref.o `test -f 'test_worldref.cc' || echo '$(srcdir)/'`test_worldref.cc

test_worldref_mpi-test_worldref.obj: test_worldref.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_worldref_mpi_CPPFLAGS) $(CPPFLAGS) $(test_worldref_mpi_CXXFLAGS) $(CXXFLAGS) -MT test_worldref_mpi-test_worldref.obj -MD -MP -MF $(DEPDIR)/test_worldref_mpi-test_worldref.Tpo -c -o test_worldref_mpi-test_worldref.obj `if test -f 'test_worldref.cc'; then $(CYGPATH_W) 'test_worldref.cc'; else $(CYGPATH_W) '$(srcdir)/test_worldref.cc'; fi`
	$(am__mv) $(DEPDIR)/test_worldref_mpi-test_worldref.Tpo $(DEPDIR)/test_worldref_mpi-test_worldref.Po
#	source='test_worldref.cc' object='test_worldref_mpi-test_worldref.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_worldref_mpi_CPPFLAGS) $(CPPFLAGS) $(test_worldref_mpi_CXXFLAGS) $(CXXFLAGS) -c -o test_worldref_mpi-test_worldref.obj `if test -f 'test_worldref.cc'; then $(CYGPATH_W) 'test_worldref.cc'; else $(CYGPATH_W) '$(srcdir)/test_worldref.cc'; fi`

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs
install-thisincludeHEADERS: $(thisinclude_HEADERS)
	@$(NORMAL_INSTALL)
	test -z "$(thisincludedir)" || $(MKDIR_P) "$(DESTDIR)$(thisincludedir)"
	@list='$(thisinclude_HEADERS)'; test -n "$(thisincludedir)" || list=; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_HEADER) $$files '$(DESTDIR)$(thisincludedir)'"; \
	  $(INSTALL_HEADER) $$files "$(DESTDIR)$(thisincludedir)" || exit $$?; \
	done

uninstall-thisincludeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(thisinclude_HEADERS)'; test -n "$(thisincludedir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	test -n "$$files" || exit 0; \
	echo " ( cd '$(DESTDIR)$(thisincludedir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(thisincludedir)" && rm -f $$files

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	set x; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

check-TESTS: $(TESTS)
	@failed=0; all=0; xfail=0; xpass=0; skip=0; \
	srcdir=$(srcdir); export srcdir; \
	list=' $(TESTS) '; \
	$(am__tty_colors); \
	if test -n "$$list"; then \
	  for tst in $$list; do \
	    if test -f ./$$tst; then dir=./; \
	    elif test -f $$tst; then dir=; \
	    else dir="$(srcdir)/"; fi; \
	    if $(TESTS_ENVIRONMENT) $${dir}$$tst; then \
	      all=`expr $$all + 1`; \
	      case " $(XFAIL_TESTS) " in \
	      *[\ \	]$$tst[\ \	]*) \
		xpass=`expr $$xpass + 1`; \
		failed=`expr $$failed + 1`; \
		col=$$red; res=XPASS; \
	      ;; \
	      *) \
		col=$$grn; res=PASS; \
	      ;; \
	      esac; \
	    elif test $$? -ne 77; then \
	      all=`expr $$all + 1`; \
	      case " $(XFAIL_TESTS) " in \
	      *[\ \	]$$tst[\ \	]*) \
		xfail=`expr $$xfail + 1`; \
		col=$$lgn; res=XFAIL; \
	      ;; \
	      *) \
		failed=`expr $$failed + 1`; \
		col=$$red; res=FAIL; \
	      ;; \
	      esac; \
	    else \
	      skip=`expr $$skip + 1`; \
	      col=$$blu; res=SKIP; \
	    fi; \
	    echo "$${col}$$res$${std}: $$tst"; \
	  done; \
	  if test "$$all" -eq 1; then \
	    tests="test"; \
	    All=""; \
	  else \
	    tests="tests"; \
	    All="All "; \
	  fi; \
	  if test "$$failed" -eq 0; then \
	    if test "$$xfail" -eq 0; then \
	      banner="$$All$$all $$tests passed"; \
	    else \
	      if test "$$xfail" -eq 1; then failures=failure; else failures=failures; fi; \
	      banner="$$All$$all $$tests behaved as expected ($$xfail expected $$failures)"; \
	    fi; \
	  else \
	    if test "$$xpass" -eq 0; then \
	      banner="$$failed of $$all $$tests failed"; \
	    else \
	      if test "$$xpass" -eq 1; then passes=pass; else passes=passes; fi; \
	      banner="$$failed of $$all $$tests did not behave as expected ($$xpass unexpected $$passes)"; \
	    fi; \
	  fi; \
	  dashes="$$banner"; \
	  skipped=""; \
	  if test "$$skip" -ne 0; then \
	    if test "$$skip" -eq 1; then \
	      skipped="($$skip test was not run)"; \
	    else \
	      skipped="($$skip tests were not run)"; \
	    fi; \
	    test `echo "$$skipped" | wc -c` -le `echo "$$banner" | wc -c` || \
	      dashes="$$skipped"; \
	  fi; \
	  report=""; \
	  if test "$$failed" -ne 0 && test -n "$(PACKAGE_BUGREPORT)"; then \
	    report="Please report to $(PACKAGE_BUGREPORT)"; \
	    test `echo "$$report" | wc -c` -le `echo "$$banner" | wc -c` || \
	      dashes="$$report"; \
	  fi; \
	  dashes=`echo "$$dashes" | sed s/./=/g`; \
	  if test "$$failed" -eq 0; then \
	    echo "$$grn$$dashes"; \
	  else \
	    echo "$$red$$dashes"; \
	  fi; \
	  echo "$$banner"; \
	  test -z "$$skipped" || echo "$$skipped"; \
	  test -z "$$report" || echo "$$report"; \
	  echo "$$dashes$$std"; \
	  test "$$failed" -eq 0; \
	else :; fi

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) check-TESTS
check: check-am
all-am: Makefile $(LTLIBRARIES) $(PROGRAMS) $(HEADERS)
installdirs:
	for dir in "$(DESTDIR)$(libdir)" "$(DESTDIR)$(thisincludedir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:
	-test -z "$(MOSTLYCLEANFILES)" || rm -f $(MOSTLYCLEANFILES)

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-generic clean-libLTLIBRARIES clean-libtool \
	clean-noinstPROGRAMS mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am: install-thisincludeHEADERS

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am: install-libLTLIBRARIES

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-libLTLIBRARIES uninstall-thisincludeHEADERS

.MAKE: check-am install-am install-strip

.PHONY: CTAGS GTAGS all all-am check check-TESTS check-am clean \
	clean-generic clean-libLTLIBRARIES clean-libtool \
	clean-noinstPROGRAMS ctags distclean distclean-compile \
	distclean-generic distclean-libtool distclean-tags distdir dvi \
	dvi-am html html-am info info-am install install-am \
	install-data install-data-am install-dvi install-dvi-am \
	install-exec install-exec-am install-html install-html-am \
	install-info install-info-am install-libLTLIBRARIES \
	install-man install-pdf install-pdf-am install-ps \
	install-ps-am install-strip install-thisincludeHEADERS \
	installcheck installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags uninstall uninstall-am uninstall-libLTLIBRARIES \
	uninstall-thisincludeHEADERS


# External library targets
$(LIBGTEST):
	$(MAKE) -C $(LIBGTESTDIR) libMADgtest.la

$(LIBTINYXML):
	$(MAKE) -C $(LIBTINYXMLDIR) libMADtinyxml.la

$(LIBMUPARSER):
	$(MAKE) -C $(LIBMUPARSERDIR) libMADmuparser.la

# MADNESS library targets
$(LIBWORLD): 
	$(MAKE) -C $(LIBWORLDDIR) libMADworld.la

$(LIBMISC): $(LIBWORLD)
	$(MAKE) -C $(LIBMISCDIR) libMADmisc.la

$(LIBTENSOR): $(LIBMISC)
	$(MAKE) -C $(LIBTENSORDIR) libMADtensor.la

$(LIBLINALG): $(LIBTENSOR)
	$(MAKE) -C $(LIBTENSORDIR) libMADlinalg.la

$(LIBMRA): $(LIBLINALG)
	$(MAKE) -C $(LIBMRADIR) libMADmra.la

$(LIBCHEM): $(LIBMRA)
	$(MAKE) -C $(LIBCHEMDIR) libMADchem.la

libraries:	$(lib_LTLIBRARIES)

install-libraries: install-libLTLIBRARIES install-thisincludeHEADERS

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
